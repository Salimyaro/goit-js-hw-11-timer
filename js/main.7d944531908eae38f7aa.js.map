{"version":3,"sources":["webpack://goit-js-hw-11-timer/./src/index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","stop","resume","timer","selector","targetDate","this","timerId","timerIntarvalId","timerStatus","targetTime","getTime","start","disabled","setInterval","UpdateUI","setCounterUIData","console","log","clearInterval","pad","value","String","padStart","currentTime","Date","now","time","Math","floor","textContent","addEventListener"],"mappings":"4QAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,yBAC7BC,MAAOF,SAASC,cAAc,0BAC9BE,KAAMH,SAASC,cAAc,yBAC7BG,KAAMJ,SAASC,cAAc,yBAC7BI,KAAML,SAASC,cAAc,yBAC7BK,OAAQN,SAASC,cAAc,4BAqD3BM,EAAQ,I,WAjDZ,cAAsC,IAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,Y,4FAAc,SACpCC,KAAKC,QAAUH,EACfE,KAAKE,gBAAkB,KACvBF,KAAKG,YAAc,KACnBH,KAAKI,WAAaL,EAAWM,UAC7BL,KAAKM,Q,uDAEC,WACFN,KAAKG,cAGTf,EAAKQ,OAAOW,UAAW,EACvBnB,EAAKO,KAAKY,UAAW,EACrBP,KAAKG,aAAc,EACnBH,KAAKE,gBAAkBM,aAAY,WACjC,EAAKC,SAAS,EAAKC,sBAClB,KACHC,QAAQC,IAAI,oB,6BAGZxB,EAAKQ,OAAOW,UAAW,EACvBnB,EAAKO,KAAKY,UAAW,EACrBM,cAAcb,KAAKE,iBACnBF,KAAKG,aAAc,EACnBQ,QAAQC,IAAI,mB,yCAWZ,SAASE,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAEnC,OAXAjB,KAAKkB,YAAcC,KAAKC,MACxBpB,KAAKqB,KAAOrB,KAAKI,WAAaJ,KAAKkB,YAU5B,CAAE7B,KATIyB,EAAIQ,KAAKC,MAAMvB,KAAKqB,KAAL,QASb7B,MARDsB,EACZQ,KAAKC,MAAOvB,KAAKqB,KAAL,MAAD,OAOS5B,KALTqB,EAAIQ,KAAKC,MAAOvB,KAAKqB,KAAL,KAAD,MAKA3B,KAJfoB,EAAIQ,KAAKC,MAAOvB,KAAKqB,KAAL,IAA2B,S,kCAMpB,IAA3BhC,EAA2B,EAA3BA,KAAMG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAC5BN,EAAKC,KAAKmC,YAAcnC,EACxBD,EAAKI,MAAMgC,YAAchC,EACzBJ,EAAKK,KAAK+B,YAAc/B,EACxBL,EAAKM,KAAK8B,YAAc9B,EACxBiB,QAAQC,IAAR,UAAevB,EAAf,YAAuBG,EAAvB,YAAgCC,EAAhC,YAAwCC,S,gCAI9B,CAAmB,CAC/BI,SAAU,WACVC,WAAY,IAAIoB,KAAK,6BAGvB/B,EAAKO,KAAK8B,iBAAiB,SAG3B,WACE5B,EAAMF,UAHRP,EAAKQ,OAAO6B,iBAAiB,SAK7B,WACE5B,EAAMS,a","file":"js/main.7d944531908eae38f7aa.js","sourcesContent":["const refs = {\r\n  days: document.querySelector('[data-value = \"days\"]'),\r\n  hours: document.querySelector('[data-value = \"hours\"]'),\r\n  mins: document.querySelector('[data-value = \"mins\"]'),\r\n  secs: document.querySelector('[data-value = \"secs\"]'),\r\n  stop: document.querySelector('[data-action =\"stop\"]'),\r\n  resume: document.querySelector('[data-action =\"resume\"]'),\r\n};\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.timerId = selector;\r\n    this.timerIntarvalId = null;\r\n    this.timerStatus = null;\r\n    this.targetTime = targetDate.getTime();\r\n    this.start();\r\n  }\r\n  start() {\r\n    if (this.timerStatus) {\r\n      return;\r\n    }\r\n    refs.resume.disabled = true;\r\n    refs.stop.disabled = false;\r\n    this.timerStatus = true;\r\n    this.timerIntarvalId = setInterval(() => {\r\n      this.UpdateUI(this.setCounterUIData());\r\n    }, 1000);\r\n    console.log(\"TIMER Started\");\r\n  }\r\n  stop() {\r\n    refs.resume.disabled = false;\r\n    refs.stop.disabled = true;\r\n    clearInterval(this.timerIntarvalId);\r\n    this.timerStatus = false;\r\n    console.log(\"TIMER Stopped\");\r\n  }\r\n  setCounterUIData() {\r\n    this.currentTime = Date.now();\r\n    this.time = this.targetTime - this.currentTime;\r\n    const days = pad(Math.floor(this.time / (1000 * 60 * 60 * 24)));\r\n    const hours = pad(\r\n      Math.floor((this.time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n    );\r\n    const mins = pad(Math.floor((this.time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = pad(Math.floor((this.time % (1000 * 60)) / 1000));\r\n    function pad(value) {\r\n      return String(value).padStart(2, \"0\");\r\n    }\r\n    return { days, hours, mins, secs };\r\n  }\r\n  UpdateUI({ days, hours, mins, secs }) {\r\n    refs.days.textContent = days;\r\n    refs.hours.textContent = hours;\r\n    refs.mins.textContent = mins;\r\n    refs.secs.textContent = secs;\r\n    console.log(`${days}:${hours}:${mins}:${secs}`);\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: \"#timer-1\",\r\n  targetDate: new Date(\"Dec  31, 2022, 03:22:50\"),\r\n});\r\n\r\nrefs.stop.addEventListener(\"click\", stopClick);\r\nrefs.resume.addEventListener(\"click\", resumeClick);\r\n\r\nfunction stopClick() {\r\n  timer.stop();\r\n}\r\nfunction resumeClick() {\r\n  timer.start();\r\n}\r\n"],"sourceRoot":""}